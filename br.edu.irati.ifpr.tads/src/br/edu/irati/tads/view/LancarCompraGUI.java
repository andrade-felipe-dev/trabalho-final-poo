/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package br.edu.irati.tads.view;

import br.edu.irati.ifpr.tads.controller.ClienteController;
import br.edu.irati.ifpr.tads.controller.CompraController;
import br.edu.irati.ifpr.tads.controller.ProdutoController;
import br.edu.irati.ifpr.tads.exception.PersistenceException;
import br.edu.irati.ifpr.tads.model.Cliente;
import br.edu.irati.ifpr.tads.model.Compra;
import br.edu.irati.ifpr.tads.model.CompraEstadoENUM;
import br.edu.irati.ifpr.tads.model.ItemCompra;
import br.edu.irati.ifpr.tads.model.Produto;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author felipe
 */
public class LancarCompraGUI extends javax.swing.JFrame {
    private List<Produto> listaProdutos;
    private List<String> nomeClientes;
    
    /**
     * Creates new form GerenciarCompraGUI
     */
    public LancarCompraGUI() {
        initComponents();
        atualizarTela();
        this.listaProdutos = new ArrayList<>();
        this.nomeClientes = new ArrayList<>();
    }
    
    private void atualizarTela() {
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        jFormattedTextFieldData.setText(sdf.format(new Date()));
        jCheckBoxPago.setSelected(true);
        atualizarTabela();
        atualizarComboCliente();
    }
    
    private void atualizarTabela() {
        try {
            ProdutoController produtoController = new ProdutoController();
            this.listaProdutos = produtoController.listarTodos();
            
        } catch (PersistenceException ex) {
            JOptionPane.showMessageDialog(null, "Não foi possível acessar o banco de dados.");
        }
        
        Object colunas[] = new Object[3];
        colunas[0] = "Nome";
        colunas[1] = "Descrição";
        colunas[2] = "Preço";
        
        Object data[][] = new Object[this.listaProdutos.size()][3];
        for (int i = 0; i < this.listaProdutos.size(); i++) {
            Produto produto = this.listaProdutos.get(i);
            data[i][0] = produto.getNome();
            data[i][1] = produto.getDescricao();
            data[i][2] = produto.getPreco();
        }
        
        DefaultTableModel model = new DefaultTableModel(data, colunas);
        jTableGerenciarCompra.setModel(model);
    }
    
    private void atualizarComboCliente() {
        try {
            ClienteController clienteController = new ClienteController();
            List<Cliente> listaCliente = clienteController.listarTodos();
            this.nomeClientes = clienteController.formatarClienteIdNomeEndereco(listaCliente);
            DefaultComboBoxModel model = new DefaultComboBoxModel(nomeClientes.toArray());
            
            jComboBoxCliente.setModel(model);
        } catch (PersistenceException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelCliente = new javax.swing.JLabel();
        jLabelData = new javax.swing.JLabel();
        jFormattedTextFieldData = new javax.swing.JFormattedTextField();
        jLabelPago = new javax.swing.JLabel();
        jCheckBoxPago = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableGerenciarCompra = new javax.swing.JTable();
        jButtonCancelar = new javax.swing.JButton();
        jButtonSalvar = new javax.swing.JButton();
        jLabelValorTotal = new javax.swing.JLabel();
        jComboBoxCliente = new javax.swing.JComboBox<>();
        jTextFieldValorFinal = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Gerenciar Compra");
        setResizable(false);

        jLabelCliente.setText("Cliente");

        jLabelData.setText("Data");

        try {
            jFormattedTextFieldData.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabelPago.setText("Pago");

        jTableGerenciarCompra.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Selecionar", "Nome", "Descrição", "Quantidade", "Preço"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableGerenciarCompra.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTableGerenciarCompra.setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        jTableGerenciarCompra.setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        jTableGerenciarCompra.setShowGrid(true);
        jTableGerenciarCompra.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableGerenciarCompraMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableGerenciarCompra);

        jButtonCancelar.setText("Fechar");
        jButtonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarActionPerformed(evt);
            }
        });

        jButtonSalvar.setText("Salvar");
        jButtonSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalvarActionPerformed(evt);
            }
        });

        jLabelValorTotal.setText("Valor Total");

        jComboBoxCliente.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabelData)
                        .addGap(18, 18, 18)
                        .addComponent(jFormattedTextFieldData, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabelPago)
                        .addGap(30, 30, 30)
                        .addComponent(jCheckBoxPago))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabelCliente)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBoxCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jButtonCancelar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(jLabelValorTotal)
                                        .addGap(18, 18, 18)
                                        .addComponent(jTextFieldValorFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jButtonSalvar))
                                .addGap(12, 12, 12)))))
                .addGap(13, 13, 13))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCliente)
                    .addComponent(jComboBoxCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBoxPago)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabelData)
                        .addComponent(jFormattedTextFieldData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabelPago)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldValorFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelValorTotal))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonCancelar)
                    .addComponent(jButtonSalvar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTableGerenciarCompraMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableGerenciarCompraMouseClicked
        if (evt.getClickCount() == 1) {
            double precoFinal = 0;
            
            for (int selectedRow : jTableGerenciarCompra.getSelectedRows()) {
                double preco = (double) jTableGerenciarCompra.getValueAt(selectedRow, 2);
                precoFinal += preco;
            }
            
            jTextFieldValorFinal.setText(String.valueOf(precoFinal));
        }
    }//GEN-LAST:event_jTableGerenciarCompraMouseClicked

    private void jButtonSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalvarActionPerformed
        try {
            ClienteController clienteController = new ClienteController();
            String selecionado = (String) jComboBoxCliente.getSelectedItem();
            String[] textArray = selecionado.split("-");
            int idCliente = Integer.parseInt(textArray[0]);
            Cliente cliente = clienteController.buscarPorId(idCliente);
            
            SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
            Date data = sdf.parse(jFormattedTextFieldData.getText());
            Compra compra = new Compra();
            compra.setCliente(cliente);
            compra.setDataHora(data);
            compra.setEstado(CompraEstadoENUM.PENDENTE);
            List<ItemCompra> listaItemCompra = new ArrayList<>();
            
            for (int selectedRow : jTableGerenciarCompra.getSelectedRows()) {
                double preco = (double) jTableGerenciarCompra.getValueAt(selectedRow, 2);
                double valorProduto =+ preco;
                
                ProdutoController produtoController = new ProdutoController();
                Produto produto = produtoController.buscarPorNome((String) jTableGerenciarCompra.getValueAt(selectedRow, 0));

                ItemCompra itemCompra = new ItemCompra();
                itemCompra.setProduto(produto);
                itemCompra.setPreco(valorProduto);
                listaItemCompra.add(itemCompra);
            }
            
            compra.setListaItemCompra(listaItemCompra);
            CompraController compraController = new CompraController();
            compraController.salvar(compra);
            
            if (jCheckBoxPago.isSelected()) {
                List<Compra> listaCompra = new ArrayList<>();
                listaCompra.add(compra);
                RealizarPagamentoGUI gerenciarPagamentoAVistaGUI = new RealizarPagamentoGUI(cliente, listaCompra);
                gerenciarPagamentoAVistaGUI.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(this, "Dados salvos", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (PersistenceException | ParseException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Erro", JOptionPane.INFORMATION_MESSAGE);

        }
    }//GEN-LAST:event_jButtonSalvarActionPerformed

    private void jButtonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_jButtonCancelarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCancelar;
    private javax.swing.JButton jButtonSalvar;
    private javax.swing.JCheckBox jCheckBoxPago;
    private javax.swing.JComboBox<String> jComboBoxCliente;
    private javax.swing.JFormattedTextField jFormattedTextFieldData;
    private javax.swing.JLabel jLabelCliente;
    private javax.swing.JLabel jLabelData;
    private javax.swing.JLabel jLabelPago;
    private javax.swing.JLabel jLabelValorTotal;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableGerenciarCompra;
    private javax.swing.JTextField jTextFieldValorFinal;
    // End of variables declaration//GEN-END:variables
}
